// <auto-generated />
using System;
using InfoTecsCSharp.DataAccess.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfoTecsCSharp.Migrations
{
    [DbContext(typeof(InfoTecsDbContext))]
    [Migration("20230207014309_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InfoTecsCSharp.Models.FileDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("InfoTecsCSharp.Models.ResultModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("AllTime")
                        .HasColumnType("time");

                    b.Property<float>("AverageOperationTime")
                        .HasColumnType("real");

                    b.Property<float>("AverageValue")
                        .HasColumnType("real");

                    b.Property<int>("FileDescriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FirstOperation")
                        .HasColumnType("datetime2");

                    b.Property<float>("MaximumValue")
                        .HasColumnType("real");

                    b.Property<float>("MedianValue")
                        .HasColumnType("real");

                    b.Property<float>("MinimumValue")
                        .HasColumnType("real");

                    b.Property<int>("RowsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileDescriptionId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("InfoTecsCSharp.Models.TableEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FileDescriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OperationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationSeconds")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FileDescriptionId");

                    b.ToTable("TableEntries");
                });

            modelBuilder.Entity("InfoTecsCSharp.Models.ResultModel", b =>
                {
                    b.HasOne("InfoTecsCSharp.Models.FileDescription", "FileDescription")
                        .WithMany()
                        .HasForeignKey("FileDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileDescription");
                });

            modelBuilder.Entity("InfoTecsCSharp.Models.TableEntry", b =>
                {
                    b.HasOne("InfoTecsCSharp.Models.FileDescription", "FileDescription")
                        .WithMany()
                        .HasForeignKey("FileDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileDescription");
                });
#pragma warning restore 612, 618
        }
    }
}
